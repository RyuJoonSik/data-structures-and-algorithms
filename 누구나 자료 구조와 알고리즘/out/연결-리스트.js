class 노드 {
    데이터;
    다음_노드;
    constructor(데이터) {
        this.데이터 = 데이터;
    }
}
const $노드_1 = new 노드('once');
const $노드_2 = new 노드('upon');
const $노드_3 = new 노드('a');
const $노드_4 = new 노드('time');
$노드_1.다음_노드 = $노드_2;
$노드_2.다음_노드 = $노드_3;
$노드_3.다음_노드 = $노드_4;
class 연결_리스트 {
    헤드;
    constructor(헤드) {
        this.헤드 = 헤드;
    }
    읽기(인덱스) {
        let 현재_노드 = this.헤드;
        let 현재_인덱스 = 0;
        while (현재_인덱스 < 인덱스) {
            현재_노드 = 현재_노드.다음_노드;
            현재_인덱스++;
            if (!현재_노드) {
                return null;
            }
        }
        return 현재_노드.데이터;
    }
    검색(값) {
        let 현재_노드 = this.헤드;
        let 현재_인덱스 = 0;
        while (현재_노드) {
            if (현재_노드.데이터 === 값) {
                return 현재_인덱스;
            }
            현재_노드 = 현재_노드.다음_노드;
            현재_인덱스++;
        }
        return null;
    }
    삽입(인덱스, 값) {
        const $새_노드 = new 노드(값);
        if (인덱스 === 0) {
            $새_노드.다음_노드 = this.헤드;
            this.헤드 = $새_노드;
            return;
        }
        let 현재_노드 = this.헤드;
        let 현재_인덱스 = 0;
        while (현재_인덱스 < 인덱스 - 1) {
            현재_노드 = 현재_노드.다음_노드;
            현재_인덱스++;
        }
        $새_노드.다음_노드 = 현재_노드.다음_노드;
        현재_노드.다음_노드 = $새_노드;
    }
    삭제(인덱스) {
        if (인덱스 === 0) {
            this.헤드 = this.헤드.다음_노드;
            return;
        }
        let 현재_노드 = this.헤드;
        let 현재_인덱스 = 0;
        while (현재_인덱스 < 인덱스 - 1) {
            현재_노드 = 현재_노드.다음_노드;
            현재_인덱스++;
        }
        const 삭제된_노드_다음_노드 = 현재_노드.다음_노드.다음_노드;
        현재_노드.다음_노드 = 삭제된_노드_다음_노드;
    }
    뒤집기() {
        let 이전_노드 = null;
        let 현재_노드 = this.헤드;
        while (현재_노드) {
            const 다음_노드 = 현재_노드.다음_노드;
            현재_노드.다음_노드 = 이전_노드;
            이전_노드 = 현재_노드;
            현재_노드 = 다음_노드;
        }
        this.헤드 = 이전_노드;
        현재_노드 = this.헤드;
        while (현재_노드) {
            console.log(현재_노드.데이터);
            현재_노드 = 현재_노드.다음_노드;
        }
    }
    중간_노드_삭제(노드) {
        노드.데이터 = 노드.다음_노드.데이터;
        노드.다음_노드 = 노드.다음_노드.다음_노드;
    }
}
const $연결_리스트 = new 연결_리스트($노드_1);
console.log($연결_리스트.읽기(3)); // time
console.log($연결_리스트.검색('time')); // 3
$연결_리스트.삽입(3, 'purple');
console.log($연결_리스트.읽기(3)); // purple
console.log($연결_리스트.검색('purple')); // 3
$연결_리스트.삭제(3);
console.log($연결_리스트.읽기(3)); // time
console.log($연결_리스트.검색('purple')); // null
$연결_리스트.뒤집기();
